name: CI/CD Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  lint-and-build:
    name: Lint and Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true
        
      - name: Build Next.js app
        run: npm run build
        continue-on-error: true
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co' }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder-key' }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY || 'placeholder-key' }}
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL || 'http://localhost:3000' }}
          
      - name: Check build artifacts
        continue-on-error: true
        run: |
          if [ -d ".next" ]; then
            echo "✅ Build successful"
          else
            echo "⚠️ Build skipped (missing secrets)"
          fi

  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run TypeScript compiler
        run: npx tsc --noEmit

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run Vitest tests
        run: npm run test:run
        
      - name: Run tests with coverage
        run: npm run test:coverage
        continue-on-error: true
        
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        continue-on-error: true
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella

